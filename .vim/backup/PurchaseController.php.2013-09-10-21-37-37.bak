<?php

namespace Oil\Admin\Controller;

use Oil\Form, St\Api, St\Mvc\Controller\RestfulModuleController, St\View\Model\ViewModel;
use Zend\View\Model\JsonModel;
use Core\Auth;

class PurchaseController extends RestfulModuleController
{
	protected $renders = array( 
		'restPutPurchase' => 'purchase/get',
		'restPostPurchase' => 'purchase/get',
		'restCreatePurchase' => 'purchase/get'
	);
	public function restIndexPurchase()
	{
		//var_dump($this->getEventManager()->getEvents());
		$request = $this->getRequest();
		
		$query = $request->getQuery();
		
		
		$myInfo = api::_()->getMyInfo();
				
		$form = new Form\PurchaseSearchForm();
		$form->bind($query)->isValid();
		$selectQuery = $form->getData();
		
		$_station = isset($selectQuery['station']) ? trim($selectQuery['station']) : 0;
		if(isset($myInfo['station']) and !empty($myInfo['station'])){
			$_station = $myInfo['station'];
		}
		//p($selectQuery);
		$itemModel = Api::_()->getModel('Oil\Model\Purchase');
		
		if (!$selectQuery)
		{
			$selectQuery = array( 
				'page' => 1, 

			);
		}
		//$selectQuery['city'] = '1';
		$selectQuery['order'] = 'iddesc';
		//$selectQuery['rows'] = 20;
		//print_r($selectQuery);	
		

		$items = $itemModel->setItemList($selectQuery)->getList();

        $items = $items->toArray(array(
            'self' => array(
                '*',
            ),
            'join' => array(
                'Pay' => array(
                    'type',
                    'amount',

                ),
                'PurchaseGoods' => array(
                    'goodsId',
                    'sn',
                    'price',
                    'quantity',
                    'amount',

                ),
            ),
        ));
		//p($items);
		$paginator = $itemModel->getPaginator();
    //    p(Api::getConfig());
		$config=Api::_()->getConfig();
		$oil_items = array();
		if($config['oil']){
			foreach($config['oil'] as $key => $val){
				$oil_items[$key] = $val;
			}
		}
		$itemModel = Api::_()->getModel('Oil\Model\Station');
		$station_items = $itemModel->getStations();
				  
		return array( 
			'form' => $form, 
			'items' => $items, 
			'query' => $query,
			'myInfo' => $myInfo,
			'station_items' => $station_items,
			'station' => $_station,
			'oil_items' => $oil_items,
			'paginator' => $paginator,
            'appConfig'=>Api::_()->getConfig(),

		);
	}
	public function restGetPurchase()
	{
		$id = $this->params('id');
		
		$itemModel = Api::_()->getModel('Oil\Model\Purchase');
		$item = $itemModel->get($id);
		
		$item = $item->toArray(array( 
			'self' => array( 
				'*' 
			) 
		)
		);
		$this->layout('layout/adminmodel');
		
		return array( 
			'item' => $item 
		);
	}
	public function restCreatePurchase()
	{
		$request = $this->getRequest();
		$query = $request->getQuery();	
		$station = isset($query->station) ? $query->station : 0;	
		$this->layout('layout/adminmodel');
        $item['purchaseTime']=date('Y-m-d');
		return array( 
			'item' => $item,
			'station' => $station
		);
	}
	public function restPostPurchase()
	{
		$postData = $this->params()->fromPost();
		$form = new Form\PurchaseCreateForm();
		$form->bind($postData);
		
		if ($form->isValid())
		{
			$postData = $form->getData();
			$item['oil_no'] = '';
			if(isset($postData['tank'])){
				$tankModel = Api::_()->getModel('Oil\Model\Tank');
				$item = $tankModel->get($postData['tank']);
				$item = $item->toArray(array(
						'self' => array(
								'*'
						)
				)
				);
			}
			$postData['oil'] = $item['oil_no'];
			unset($item['oil_no']);

			$auth = new Auth('Config', 'Session', 'Auth_Admin');
			$auth_json = $auth->getAuthStorage()->read();
			$auth_data = json_decode($auth_json, true);
			$user_id = isset($auth_data['id']) ? $auth_data['id'] : 0;
			$user_name = isset($auth_data['userName']) ? $auth_data['userName'] : '';
			$postData['users_id'] = $user_id;
			$postData['users_name'] = $user_name;
			$itemModel = Api::_()->getModel('Oil\Model\Purchase');
			unset($postData['station']);
			$itemId = $itemModel->setItem($postData)->create();
			//exit();
			$this->flashMessenger()->addSuccessMessage('油品進貨記錄新增成功');
			$this->redirect()->toUrl('/admin/core/core/reload');
		}
		else
		{
		}
		$this->layout('layout/adminmodel');
		return array( 
			'form' => $form 
		);
	}
	public function restPutPurchase()
	{
		$request = $this->getRequest();
		$postData = $request->getPost();
		
		$form = new Form\PurchaseEditForm();
		$form->bind($postData);
		
		if ($form->isValid())
		{
			$postData = $form->getData();
			
			$itemModel = Api::_()->getModel('Oil\Model\Purchase');
			
			$itemId = $itemModel->setItem($postData)->save();
			$this->flashMessenger()->addSuccessMessage('修改成功');
			$this->redirect()->toUrl('/admin/core/core/reload');
		}
		else
		{
			//$this->flashMessenger()->addMessage('');
			//$flashMesseger = array('post-edit-failed');
		}
		$this->layout('layout/adminmodel');
		return array( 
			'item' => $postData, 
			'form' => $form 
		);
	}
	public function restDeletePurchase()
	{
		$this->changeViewModel('json');
		$request = $this->getRequest();
		$postData = $request->getPost();
		$callback = $request->getPost()->get('callback');
		
		$id = $this->params('id');
		
		$itemModel = Api::_()->getModel('Oil\Model\Purchase');
		
		$data = array( 
			'id' => $id
		);
		$auth = new Auth('Config', 'Session', 'Auth_Admin');
		$auth_json = $auth->getAuthStorage()->read();
		$auth_data = json_decode($auth_json, true);
		$user_id = isset($auth_data['id']) ? $auth_data['id'] : 0;
		$user_name = isset($auth_data['userName']) ? $auth_data['userName'] : '';
		$postData['users_id'] = $user_id;
		if($user_id and $user_id != 1){
			$data['users_id'] = $user_id;
		}
		$itemId = $itemModel->remove($data);
		$this->flashMessenger()->addSuccessMessage('刪除成功');
		return new JsonModel($itemModel = Api::_()->showOk());
	}
}

