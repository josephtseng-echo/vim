<?php

namespace Oil\Admin\Controller;

use Oil\Form, St\Api, St\Mvc\Controller\RestfulModuleController, St\View\Model\ViewModel;
use Zend\View\Model\JsonModel;

class TankController extends RestfulModuleController
{
	protected $renders = array( 
		'restPutStation' => 'tank/get',
		'restPostStation' => 'tank/get',
		'restCreateStation' => 'tank/get'
	);
	public function restIndexStation()
	{

		//var_dump($this->getEventManager()->getEvents());
		$request = $this->getRequest();
		
		$query = $request->getQuery();
		
		 $form = new Form\StationSearchForm();
	     $form->bind($query)->isValid();
		 $selectQuery = $form->getData();
		//p($selectQuery);
		$itemModel = Api::_()->getModel('Oil\Model\Station');
		
		if (!$selectQuery)
		{
			$selectQuery = array( 
				'page' => 1, 
			//	'status' => 'active'
			);
		}
		//$selectQuery['city'] = '1';
		$selectQuery['order'] = 'iddesc';
		//$selectQuery['rows'] = 20;
		//print_r($selectQuery);
		

		$items = $itemModel->setMap(array( 
			'self' => array( 
				'*' 
			) 
		)
		)->setItemList($selectQuery)->getList();
		
		$items = $items->toArray();
		//p($items);
		$paginator = $itemModel->getPaginator();
		
		return array( 
			'form' => $form, 
			'items' => $items, 
			'query' => $query, 
			'paginator' => $paginator 
		);
	}
	public function restGetStation()
	{
		$id = $this->params('id');
		
		$itemModel = Api::_()->getModel('Oil\Model\Station');
		$item = $itemModel->get($id);
		
		$item = $item->toArray(array( 
			'self' => array( 
				'*' 
			) 
		)
		);
		$this->layout('layout/adminmodel');

		return array( 
			'item' => $item 
		);
	}
	public function restCreateStation()
	{
		$this->layout('layout/adminmodel');
		return array( 
			'item' => $item 
		);
	}
	public function restPostStation()
	{
		$postData = $this->params()->fromPost();
		$form = new Form\StationCreateForm();
		$form->bind($postData);
		
		if ($form->isValid())
		{
			$postData = $form->getData();
			
			$itemModel = Api::_()->getModel('Oil\Model\Station');
			$itemId = $itemModel->setItem($postData)->create();
			$this->flashMessenger()->addSuccessMessage('商品新增成功');
			$this->redirect()->toUrl('/admin/core/core/reload');
		}
		else
		{
		}
		$this->layout('layout/adminmodel');
		return array( 
			'form' => $form 
		);
	}
	public function restPutStation()
	{
		$request = $this->getRequest();
		$postData = $request->getPost();
		
		$form = new Form\StationEditForm();
		$form->bind($postData);
		
		if ($form->isValid())
		{
			$postData = $form->getData();
			
			$itemModel = Api::_()->getModel('Oil\Model\Station');
			
			$itemId = $itemModel->setItem($postData)->save();
			$this->flashMessenger()->addSuccessMessage('修改成功');
			$this->redirect()->toUrl('/admin/core/core/reload');
		}
		else
		{
			//$this->flashMessenger()->addMessage('');
			//$flashMesseger = array('post-edit-failed');
		}
		$this->layout('layout/adminmodel');
		return array( 
			'item' => $postData, 
			'form' => $form 
		);
	}
	public function restDeleteStation()
	{
		$this->changeViewModel('json');
		$request = $this->getRequest();
		$postData = $request->getPost();
		$callback = $request->getPost()->get('callback');
		
		$id = $this->params('id');
		
		$itemModel = Api::_()->getModel('Oil\Model\Station');
		
		$data = array( 
			'id' => $id, 
			'status' => 'deleted' 
		)
		;
		$itemId = $itemModel->save($data);
		$this->flashMessenger()->addSuccessMessage('刪除成功');
		return new JsonModel($itemModel = Api::_()->showOk());
	}
}

