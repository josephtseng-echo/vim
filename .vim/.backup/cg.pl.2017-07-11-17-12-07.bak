#! /usr/bin/env perl
#
# Short description for cg.pl
#
# Author josephzeng <josephzeng36@gmail.com>
# Version 0.1
# Copyright (C) 2017 josephzeng <josephzeng36@gmail.com>
# Modified On 2017-07-07 14:38
# Created  2017-07-07 14:38
#
use strict;
use warnings;

use AnyEvent;
use AnyEvent::Handle;
use Data::Dumper;

use v5.20.2;

my $is_connected = 0;


my $cv = AnyEvent->condvar;
my $hdl; 

my $timer = AnyEvent->timer(
    after => 5,
    interval => 5,
    cb => sub {
        ###say "hehe";
        $hdl->push_write("c1835ed8e0d26cdae0");
        #$hdl->push_write("c1093206000000ffff0200");
        #$hdl->push_write("c11732318a56cacfcbc9cc4b55d2b1348e05000000ffff0200");
        #$hdl->push_write("c11732318a56cacfcbc9cc4b55d2b1348e05000000ffff0200");
        $hdl->push_read (line => sub {
                #print Dumper @_;
                #my ($hdl, $line) = @_;
                #say "got line <$line>";
                #$cv->send;
        });
        $hdl->on_read(sub {
            my $handle = shift;
            my $data = $hdl->rbuf();
            say Dumper $data;
        });
    }
);

$hdl = AnyEvent::Handle->new(
    connect => ['127.0.0.1', 9898],
    keepalive => 1,
    on_connect => sub {
        say "connect ok";
        $is_connected = 1;
    },
    on_connect_error => sub{
        say "could not connect\n";
        $hdl->destroy;
        $is_connected = 0;
    },
    on_error => sub{
        $hdl->destroy;
        $is_connected = 0;
    },
    on_eof => sub{
        $hdl->destroy;
        $is_connected = 0;
    },
    #on_read => sub{
    #    my ($self) = @_;
    #    $self->unshift_read(line => sub {
    #        my ($read_hdl,$data) = @_;
    #        print $data."\n";
    #    });
    #},
);

#$hdl->push_write("abc");
#say "yes123";
##$hdl->push_read (line => sub {
##    my ($hdl, $line) = @_;
##    say "got line <$line>";
##    $cv->send;
##});
$cv->recv;



