!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
<Leader>fa	.vim/config/plugins.vim	/^noremap <Leader>fa :LeaderfFunction<cr>$/;"	kind:m	line:153
<Leader>fb	.vim/config/plugins.vim	/^noremap <Leader>fb :LeaderfBuffer<cr>$/;"	kind:m	line:154
<Leader>ff	.vim/config/plugins.vim	/^noremap <Leader>ff :LeaderfFile<cr>$/;"	kind:m	line:158
<Leader>fl	.vim/config/plugins.vim	/^noremap <Leader>fl :LeaderfLine<cr>$/;"	kind:m	line:157
<Leader>fm	.vim/config/plugins.vim	/^noremap <Leader>fm :LeaderfMru<cr>$/;"	kind:m	line:156
<Leader>ft	.vim/config/plugins.vim	/^noremap <Leader>ft :LeaderfTag<cr>$/;"	kind:m	line:155
<c-u>	.vim/config/plugins.vim	/^nnoremap <c-u> :Ag<space>$/;"	kind:m	line:57
<c-z>	.vim/config/plugins.vim	/^noremap <c-z> <NOP>$/;"	kind:m	line:104
<leader>bf	.vim/config/shortcuts.vim	/^nmap <silent> <leader>bf :BufExplorer<CR>$/;"	kind:m	line:27
<leader>da	.vim/config/plugins.vim	/^map <leader>da :DoxAuthor<CR>$/;"	kind:m	line:20
<leader>db	.vim/config/plugins.vim	/^map <leader>db :DoxBlock<CR>$/;"	kind:m	line:22
<leader>dc	.vim/config/plugins.vim	/^map <leader>dc a \/* *\/<LEFT><LEFT><LEFT>$/;"	kind:m	line:23
<leader>df	.vim/config/plugins.vim	/^map <leader>df :Dox<CR>$/;"	kind:m	line:21
<leader>dt	.vim/config/shortcuts.vim	/^map <leader>dt a<C-R>=strftime("%Y-%m-%d %H:%M:%S")<CR>$/;"	kind:m	line:13
<leader>f1	.vim/config/shortcuts.vim	/^nnoremap <leader>f1 :set filetype=xhtml<cr>$/;"	kind:m	line:7
<leader>f2	.vim/config/shortcuts.vim	/^nnoremap <leader>f2 :set filetype=css<cr>$/;"	kind:m	line:8
<leader>f3	.vim/config/shortcuts.vim	/^nnoremap <leader>f3 :set filetype=javascript<cr>$/;"	kind:m	line:9
<leader>f4	.vim/config/shortcuts.vim	/^nnoremap <leader>f4 :set filetype=php<cr>$/;"	kind:m	line:10
<leader>fc	.vim/config/func.vim	/^map <silent><leader>fc :call FormatCode()<CR>$/;"	kind:m	line:29
<leader>fd	.vim/config/plugins.vim	/^noremap <leader>fd :<C-U><C-R>=printf("Leaderf! gtags -d %s --auto-jump", expand("<cword>"))<CR><CR>$/;"	kind:m	line:190
<leader>fn	.vim/config/plugins.vim	/^noremap <leader>fn :<C-U><C-R>=printf("Leaderf gtags --next %s", "")<CR><CR>$/;"	kind:m	line:192
<leader>fo	.vim/config/plugins.vim	/^noremap <leader>fo :<C-U><C-R>=printf("Leaderf! gtags --recall %s", "")<CR><CR>$/;"	kind:m	line:191
<leader>fp	.vim/config/plugins.vim	/^noremap <leader>fp :<C-U><C-R>=printf("Leaderf gtags --previous %s", "")<CR><CR>$/;"	kind:m	line:193
<leader>fr	.vim/config/plugins.vim	/^noremap <leader>fr :<C-U><C-R>=printf("Leaderf! gtags -r %s --auto-jump", expand("<cword>"))<CR><CR>$/;"	kind:m	line:189
<leader>fv	.vim/config/shortcuts.vim	/^nmap <silent> <leader>fv :FencView<CR>$/;"	kind:m	line:25
<leader>gd	.vim/config/plugins.vim	/^nmap <leader>gd :YcmDiags<CR>$/;"	kind:m	line:100
<leader>gf	.vim/config/plugins.vim	/^nnoremap <leader>gf :YcmCompleter GoToDefinition<CR>            " 跳转到定义处$/;"	kind:m	line:102
<leader>gg	.vim/config/plugins.vim	/^nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>$/;"	kind:m	line:103
<leader>gg	.vim/config/shortcuts.vim	/^map <leader>gg <ESC>ggVG$/;"	kind:m	line:18
<leader>gl	.vim/config/plugins.vim	/^nnoremap <leader>gl :YcmCompleter GoToDeclaration<CR>           " 跳转到申明处$/;"	kind:m	line:101
<leader>hi	.vim/config/shortcuts.vim	/^nmap <silent> <leader>hi :AddHeader<cr>$/;"	kind:m	line:29
<leader>hs	.vim/config/shortcuts.vim	/^nmap <silent> <leader>hs :GundoToggle<cr>$/;"	kind:m	line:28
<leader>ms	.vim/config/shortcuts.vim	/^nmap <silent> <leader>ms :marks<CR>$/;"	kind:m	line:24
<leader>nt	.vim/config/shortcuts.vim	/^nmap <silent> <leader>nt :NERDTreeToggle<cr>$/;"	kind:m	line:23
<leader>q	.vim/config/shortcuts.vim	/^nmap <silent> <leader>q :q!<CR>$/;"	kind:m	line:21
<leader>qa	.vim/config/shortcuts.vim	/^nmap <silent> <leader>qa :qall!<CR>$/;"	kind:m	line:22
<leader>rs	.vim/config/shortcuts.vim	/^map <leader>rs :source .my.vim<cr> :rviminfo .my.viminfo<cr>$/;"	kind:m	line:32
<leader>ss	.vim/config/shortcuts.vim	/^map <leader>ss :mksession! .my.vim<cr> :wviminfo! .my.viminfo<cr>$/;"	kind:m	line:31
<leader>tc	.vim/config/func.vim	/^map <silent><leader>tc :call ToggleCurline()<CR>$/;"	kind:m	line:16
<leader>tt	.vim/config/shortcuts.vim	/^nmap <silent> <leader>tt :TagbarToggle<CR>$/;"	kind:m	line:26
<leader>w	.vim/config/shortcuts.vim	/^nmap <silent> <leader>w :w!<CR>$/;"	kind:m	line:19
<leader>wp	.vim/config/shortcuts.vim	/^map <silent><leader>wp <esc>:set wrap!<cr>$/;"	kind:m	line:16
<leader>x	.vim/config/shortcuts.vim	/^nmap <silent> <leader>x :x!<CR>$/;"	kind:m	line:20
FormatCode	.vim/config/func.vim	/^func! FormatCode()$/;"	kind:f	line:18
NERDTreeAutoDeleteBuffer	.vim/config/plugins.vim	/^let NERDTreeAutoDeleteBuffer=1$/;"	kind:v	line:77
NERDTreeChDirMode	.vim/config/plugins.vim	/^let NERDTreeChDirMode=1$/;"	kind:v	line:78
NERDTreeDirArrows	.vim/config/plugins.vim	/^let NERDTreeDirArrows=1$/;"	kind:v	line:79
NERDTreeShowHidden	.vim/config/plugins.vim	/^let NERDTreeShowHidden=0$/;"	kind:v	line:71
NERDTreeShowHidden	.vim/config/plugins.vim	/^let NERDTreeShowHidden=1$/;"	kind:v	line:76
NERDTreeWinSize	.vim/config/plugins.vim	/^let NERDTreeWinSize=32$/;"	kind:v	line:75
Q	.vim/config/base.vim	/^nmap Q <Esc>$/;"	kind:m	line:172
ToggleCurline	.vim/config/func.vim	/^func! ToggleCurline ()$/;"	kind:f	line:7
append_ul	.vim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	kind:f	line:2659
ask	.vim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	kind:f	line:310
ask_no_interrupt	.vim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	kind:f	line:320
assign_name	.vim/autoload/plug.vim	/^function! s:assign_name()$/;"	kind:f	line:960
assoc	.vim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	kind:f	line:306
b:javascript_fold	.vim/config/base.vim	/^let b:javascript_fold=1$/;"	kind:v	line:169
bang	.vim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	kind:f	line:987
bar	.vim/autoload/plug.vim	/^function! s:bar()$/;"	kind:f	line:1461
batchfile	.vim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	kind:f	line:502
check_ruby	.vim/autoload/plug.vim	/^function! s:check_ruby()$/;"	kind:f	line:1129
checkout	.vim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	kind:f	line:1077
chsh	.vim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	kind:f	line:972
clean	.vim/autoload/plug.vim	/^function! s:clean(force)$/;"	kind:f	line:2366
compare_git_uri	.vim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	kind:f	line:2233
define_commands	.vim/autoload/plug.vim	/^function! s:define_commands()$/;"	kind:f	line:259
delete	.vim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	kind:f	line:2441
delete_op	.vim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	kind:f	line:2437
diff	.vim/autoload/plug.vim	/^function! s:diff()$/;"	kind:f	line:2663
dirpath	.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	kind:f	line:478
dirpath	.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	kind:f	line:516
do	.vim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	kind:f	line:1018
doautocmd	.vim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	kind:f	line:583
dobufread	.vim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	kind:f	line:589
err	.vim/autoload/plug.vim	/^function! s:err(msg)$/;"	kind:f	line:525
esc	.vim/autoload/plug.vim	/^function! s:esc(path)$/;"	kind:f	line:537
escrtp	.vim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	kind:f	line:541
extract_name	.vim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	kind:f	line:2555
find_name	.vim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	kind:f	line:2587
finish	.vim/autoload/plug.vim	/^function! s:finish(pull)$/;"	kind:f	line:1088
finish_bindings	.vim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	kind:f	line:907
format_git_log	.vim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	kind:f	line:2647
format_message	.vim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	kind:f	line:2245
g:DoxygenToolkit_authorName	.vim/config/plugins.vim	/^let g:DoxygenToolkit_authorName = "JosephZeng josephzeng36@gmail.com"$/;"	kind:v	line:18
g:DoxygenToolkit_briefTag_funcName	.vim/config/plugins.vim	/^let g:DoxygenToolkit_briefTag_funcName = "yes"$/;"	kind:v	line:17
g:Lf_CacheDirectory	.vim/config/plugins.vim	/^let g:Lf_CacheDirectory = expand($CACHE)$/;"	kind:v	line:164
g:Lf_GtagsAutoGenerate	.vim/config/plugins.vim	/^let g:Lf_GtagsAutoGenerate = 1$/;"	kind:v	line:187
g:Lf_Gtagslabel	.vim/config/plugins.vim	/^let g:Lf_Gtagslabel = 'native-pygments'$/;"	kind:v	line:188
g:Lf_HideHelp	.vim/config/plugins.vim	/^let g:Lf_HideHelp = 1$/;"	kind:v	line:166
g:Lf_NormalMap	.vim/config/plugins.vim	/^ let g:Lf_NormalMap = {$/;"	kind:v	line:169
g:Lf_PreviewResult	.vim/config/plugins.vim	/^let g:Lf_PreviewResult = {'Function':0, 'BufTag':0}$/;"	kind:v	line:168
g:Lf_RootMarkers	.vim/config/plugins.vim	/^let g:Lf_RootMarkers = ['.project', '.root', '.svn', '.git']$/;"	kind:v	line:161
g:Lf_ShortcutB	.vim/config/plugins.vim	/^let g:Lf_ShortcutB = '<m-n>'$/;"	kind:v	line:152
g:Lf_ShortcutF	.vim/config/plugins.vim	/^let g:Lf_ShortcutF = '<c-p>'$/;"	kind:v	line:151
g:Lf_ShowRelativePath	.vim/config/plugins.vim	/^let g:Lf_ShowRelativePath = 0$/;"	kind:v	line:165
g:Lf_StlColorscheme	.vim/config/plugins.vim	/^let g:Lf_StlColorscheme = 'powerline'$/;"	kind:v	line:167
g:Lf_StlSepaator	.vim/config/plugins.vim	/^let g:Lf_StlSepaator = { 'left': '', 'right': '', 'font': '' }$/;"	kind:v	line:159
g:Lf_WindowHeight	.vim/config/plugins.vim	/^let g:Lf_WindowHeight = 0.30$/;"	kind:v	line:163
g:Lf_WorkingDirectoryMode	.vim/config/plugins.vim	/^let g:Lf_WorkingDirectoryMode = 'Ac'$/;"	kind:v	line:162
g:NERDTreeWinPos	.vim/config/plugins.vim	/^let g:NERDTreeWinPos = "right"$/;"	kind:v	line:70
g:NERDTreeWinSize	.vim/config/plugins.vim	/^let g:NERDTreeWinSize=35$/;"	kind:v	line:72
g:UltiSnipsExpandTrigger	.vim/config/plugins.vim	/^let g:UltiSnipsExpandTrigger="<leader><tab>"$/;"	kind:v	line:183
g:UltiSnipsJumpBackwardTrigger	.vim/config/plugins.vim	/^let g:UltiSnipsJumpBackwardTrigger="<leader><s-tab>"$/;"	kind:v	line:185
g:UltiSnipsJumpForwardTrigger	.vim/config/plugins.vim	/^let g:UltiSnipsJumpForwardTrigger="<leader><tab>"$/;"	kind:v	line:184
g:ackprg	.vim/config/plugins.vim	/^let g:ackprg = 'ag --nogroup --nocolor --column'$/;"	kind:v	line:56
g:airline#extensions#ale#enabled	.vim/config/plugins.vim	/^let g:airline#extensions#ale#enabled = 1$/;"	kind:v	line:42
g:airline_theme	.vim/config/plugins.vim	/^let g:airline_theme='simple'$/;"	kind:v	line:27
g:ale_c_cppcheck_options	.vim/config/plugins.vim	/^let g:ale_c_cppcheck_options = ''$/;"	kind:v	line:46
g:ale_c_gcc_options	.vim/config/plugins.vim	/^let g:ale_c_gcc_options = '-Wall -O2 -std=c99'$/;"	kind:v	line:44
g:ale_completion_delay	.vim/config/plugins.vim	/^let g:ale_completion_delay = 500$/;"	kind:v	line:37
g:ale_cpp_cppcheck_options	.vim/config/plugins.vim	/^let g:ale_cpp_cppcheck_options = ''$/;"	kind:v	line:47
g:ale_cpp_gcc_options	.vim/config/plugins.vim	/^let g:ale_cpp_gcc_options = '-Wall -O2 -std=c++14'$/;"	kind:v	line:45
g:ale_echo_delay	.vim/config/plugins.vim	/^let g:ale_echo_delay = 20$/;"	kind:v	line:38
g:ale_echo_msg_error_str	.vim/config/plugins.vim	/^let g:ale_echo_msg_error_str         = 'E'                          " 错误显示字符$/;"	kind:v	line:52
g:ale_echo_msg_format	.vim/config/plugins.vim	/^let g:ale_echo_msg_format = '[%linter%] %code: %%s'    " 告警显示格式$/;"	kind:v	line:49
g:ale_echo_msg_warning_str	.vim/config/plugins.vim	/^let g:ale_echo_msg_warning_str       = 'W'                          " 警告显示字符$/;"	kind:v	line:53
g:ale_lint_delay	.vim/config/plugins.vim	/^let g:ale_lint_delay = 500$/;"	kind:v	line:39
g:ale_lint_on_insert_leave	.vim/config/plugins.vim	/^let g:ale_lint_on_insert_leave = 1                    " 退出插入模式即检查$/;"	kind:v	line:41
g:ale_lint_on_text_changed	.vim/config/plugins.vim	/^let g:ale_lint_on_text_changed = 'normal'            " 代码更改后启动检查$/;"	kind:v	line:40
g:ale_linters	.vim/config/plugins.vim	/^let g:ale_linters = {$/;"	kind:v	line:32
g:ale_linters_expicit	.vim/config/plugins.vim	/^let g:ale_linters_expicit = 1$/;"	kind:v	line:31
g:ale_set_quickfix	.vim/config/plugins.vim	/^let g:ale_set_quickfix = 1$/;"	kind:v	line:43
g:ale_sign_column_always	.vim/config/plugins.vim	/^let g:ale_sign_column_always = 1                    " 总是显示动态检查结果$/;"	kind:v	line:36
g:ale_sign_error	.vim/config/plugins.vim	/^let g:ale_sign_error = ">>"                            " error 告警符号$/;"	kind:v	line:50
g:ale_sign_warning	.vim/config/plugins.vim	/^let g:ale_sign_warning = "--"                        " warning 告警符号$/;"	kind:v	line:51
g:asyncrun_bell	.vim/config/plugins.vim	/^let g:asyncrun_bell = 1$/;"	kind:v	line:66
g:asyncrun_open	.vim/config/plugins.vim	/^let g:asyncrun_open = 6$/;"	kind:v	line:65
g:bufExplorerDefaultHelp	.vim/config/plugins.vim	/^let g:bufExplorerDefaultHelp=0$/;"	kind:v	line:196
g:bufExplorerFindActive	.vim/config/plugins.vim	/^let g:bufExplorerFindActive=1$/;"	kind:v	line:198
g:bufExplorerShowRelativePath	.vim/config/plugins.vim	/^let g:bufExplorerShowRelativePath=1$/;"	kind:v	line:197
g:bufExplorerSortBy	.vim/config/plugins.vim	/^let g:bufExplorerSortBy='name'$/;"	kind:v	line:199
g:doxygen_enhanced_color	.vim/config/plugins.vim	/^let g:doxygen_enhanced_color = 1$/;"	kind:v	line:19
g:gutentags_auto_add_gtags_cscope	.vim/config/plugins.vim	/^let g:gutentags_auto_add_gtags_cscope = 0$/;"	kind:v	line:140
g:gutentags_cache_dir	.vim/config/plugins.vim	/^let g:gutentags_cache_dir = s:vim_tags$/;"	kind:v	line:132
g:gutentags_ctags_extra_args	.vim/config/plugins.vim	/^let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']$/;"	kind:v	line:134
g:gutentags_ctags_extra_args	.vim/config/plugins.vim	/^let g:gutentags_ctags_extra_args += ['--c-kinds=+px']$/;"	kind:v	line:135
g:gutentags_ctags_extra_args	.vim/config/plugins.vim	/^let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']$/;"	kind:v	line:133
g:gutentags_ctags_tagfile	.vim/config/plugins.vim	/^let g:gutentags_ctags_tagfile = '.tags'$/;"	kind:v	line:129
g:gutentags_project_root	.vim/config/plugins.vim	/^let g:gutentags_project_root = ['.svn', '.git', '.project']$/;"	kind:v	line:128
g:header_auto_add_header	.vim/config/plugins.vim	/^let g:header_auto_add_header = 0$/;"	kind:v	line:148
g:header_field_author	.vim/config/plugins.vim	/^let g:header_field_author = 'josephzeng'$/;"	kind:v	line:146
g:header_field_author_email	.vim/config/plugins.vim	/^let g:header_field_author_email = 'josephzeng36@gmail.com'$/;"	kind:v	line:147
g:loaded_plug	.vim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	kind:v	line:90
g:mkdp_auto_close	.vim/config/plugins.vim	/^let g:mkdp_auto_close = 1$/;"	kind:v	line:206
g:mkdp_auto_start	.vim/config/plugins.vim	/^let g:mkdp_auto_start = 0$/;"	kind:v	line:205
g:mkdp_browser	.vim/config/plugins.vim	/^let g:mkdp_browser = ''$/;"	kind:v	line:211
g:mkdp_browserfunc	.vim/config/plugins.vim	/^let g:mkdp_browserfunc = ''$/;"	kind:v	line:213
g:mkdp_command_for_global	.vim/config/plugins.vim	/^let g:mkdp_command_for_global = 0$/;"	kind:v	line:208
g:mkdp_echo_preview_url	.vim/config/plugins.vim	/^let g:mkdp_echo_preview_url = 0$/;"	kind:v	line:212
g:mkdp_highlight_css	.vim/config/plugins.vim	/^let g:mkdp_highlight_css = ''$/;"	kind:v	line:226
g:mkdp_markdown_css	.vim/config/plugins.vim	/^let g:mkdp_markdown_css = ''$/;"	kind:v	line:225
g:mkdp_open_ip	.vim/config/plugins.vim	/^let g:mkdp_open_ip = ''$/;"	kind:v	line:210
g:mkdp_open_to_the_world	.vim/config/plugins.vim	/^let g:mkdp_open_to_the_world = 0$/;"	kind:v	line:209
g:mkdp_page_title	.vim/config/plugins.vim	/^let g:mkdp_page_title = '「${name}」'$/;"	kind:v	line:228
g:mkdp_port	.vim/config/plugins.vim	/^let g:mkdp_port = ''$/;"	kind:v	line:227
g:mkdp_preview_options	.vim/config/plugins.vim	/^let g:mkdp_preview_options = {$/;"	kind:v	line:214
g:mkdp_refresh_slow	.vim/config/plugins.vim	/^let g:mkdp_refresh_slow = 0$/;"	kind:v	line:207
g:plugs_order	.vim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	kind:v	line:2782
g:svnj_browse_cache_all	.vim/config/plugins.vim	/^let g:svnj_browse_cache_all = 1$/;"	kind:v	line:180
g:svnj_custom_statusbar_ops_hide	.vim/config/plugins.vim	/^let g:svnj_custom_statusbar_ops_hide = 1$/;"	kind:v	line:179
g:templates_directory	.vim/config/plugins.vim	/^let g:templates_directory = '~\/.vim\/templates'$/;"	kind:v	line:202
g:ycm_add_preview_to_completeopt	.vim/config/plugins.vim	/^let g:ycm_add_preview_to_completeopt = 0$/;"	kind:v	line:91
g:ycm_collect_identifiers_from_comments_and_strings	.vim/config/plugins.vim	/^let g:ycm_collect_identifiers_from_comments_and_strings = 1$/;"	kind:v	line:95
g:ycm_complete_in_strings	.vim/config/plugins.vim	/^let g:ycm_complete_in_strings=1$/;"	kind:v	line:96
g:ycm_filetype_blacklist	.vim/config/plugins.vim	/^let g:ycm_filetype_blacklist = {$/;"	kind:v	line:119
g:ycm_filetype_whitelist	.vim/config/plugins.vim	/^let g:ycm_filetype_whitelist = { $/;"	kind:v	line:110
g:ycm_key_invoke_completion	.vim/config/plugins.vim	/^let g:ycm_key_invoke_completion = '<c-z>'$/;"	kind:v	line:97
g:ycm_min_num_identifier_candidate_chars	.vim/config/plugins.vim	/^let g:ycm_min_num_identifier_candidate_chars = 2$/;"	kind:v	line:94
g:ycm_semantic_triggers	.vim/config/plugins.vim	/^let g:ycm_semantic_triggers =  {$/;"	kind:v	line:106
g:ycm_server_log_level	.vim/config/plugins.vim	/^let g:ycm_server_log_level = 'info'$/;"	kind:v	line:93
g:ycm_show_diagnostics_ui	.vim/config/plugins.vim	/^let g:ycm_show_diagnostics_ui = 0$/;"	kind:v	line:92
g:ycm_use_clangd	.vim/config/plugins.vim	/^let g:ycm_use_clangd = 0$/;"	kind:v	line:99
git_dir	.vim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	kind:f	line:123
git_local_branch	.vim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	kind:f	line:175
git_origin_branch	.vim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	kind:f	line:185
git_origin_url	.vim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	kind:f	line:138
git_revision	.vim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	kind:f	line:147
git_validate	.vim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	kind:f	line:2297
git_version_requirement	.vim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	kind:f	line:457
glob	.vim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	kind:f	line:291
glob_dir	.vim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	kind:f	line:2225
hash_match	.vim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	kind:f	line:1073
infer_properties	.vim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	kind:f	line:761
install	.vim/autoload/plug.vim	/^function! s:install(force, names)$/;"	kind:f	line:779
is_local_plug	.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	kind:f	line:482
is_local_plug	.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	kind:f	line:520
is_managed	.vim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	kind:f	line:1121
is_preview_window_open	.vim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	kind:f	line:2579
is_updated	.vim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	kind:f	line:1014
isabsolute	.vim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	kind:f	line:119
job_abort	.vim/autoload/plug.vim	/^function! s:job_abort()$/;"	kind:f	line:1330
job_cb	.vim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	kind:f	line:1380
job_exit_cb	.vim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	kind:f	line:1373
job_out_cb	.vim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	kind:f	line:1359
last_non_empty_line	.vim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	kind:f	line:1348
lastline	.vim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	kind:f	line:861
lazy	.vim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	kind:f	line:328
lines	.vim/autoload/plug.vim	/^function! s:lines(msg)$/;"	kind:f	line:857
load_plugin	.vim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	kind:f	line:433
loaded_names	.vim/autoload/plug.vim	/^function! s:loaded_names()$/;"	kind:f	line:429
lod	.vim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	kind:f	line:641
lod_cmd	.vim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	kind:f	line:671
lod_ft	.vim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	kind:f	line:663
lod_map	.vim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	kind:f	line:677
log	.vim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	kind:f	line:1486
log4	.vim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	kind:f	line:1263
logpos	.vim/autoload/plug.vim	/^function! s:logpos(name)$/;"	kind:f	line:1471
lpad	.vim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	kind:f	line:853
names	.vim/autoload/plug.vim	/^function! s:names(...)$/;"	kind:f	line:1125
new_window	.vim/autoload/plug.vim	/^function! s:new_window()$/;"	kind:f	line:865
nvim_cb	.vim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	kind:f	line:1387
parse_options	.vim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	kind:f	line:723
path	.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	kind:f	line:474
path	.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	kind:f	line:512
plug#	.vim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	kind:f	line:703
plug#begin	.vim/autoload/plug.vim	/^function! plug#begin(...)$/;"	kind:f	line:235
plug#end	.vim/autoload/plug.vim	/^function! plug#end()$/;"	kind:f	line:336
plug#helptags	.vim/autoload/plug.vim	/^function! plug#helptags()$/;"	kind:f	line:787
plug#load	.vim/autoload/plug.vim	/^function! plug#load(...)$/;"	kind:f	line:603
plug#shellescape	.vim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	kind:f	line:2210
plug_call	.vim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	kind:f	line:204
plug_call	.vim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	kind:f	line:214
plug_expand	.vim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	kind:f	line:227
plug_fnamemodify	.vim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	kind:f	line:223
plug_getcwd	.vim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	kind:f	line:219
plug_tempname	.vim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	kind:f	line:231
plug_window_exists	.vim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	kind:f	line:869
prepare	.vim/autoload/plug.vim	/^function! s:prepare(...)$/;"	kind:f	line:917
preview_commit	.vim/autoload/plug.vim	/^function! s:preview_commit()$/;"	kind:f	line:2601
progress_bar	.vim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	kind:f	line:2229
progress_opt	.vim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	kind:f	line:464
reap	.vim/autoload/plug.vim	/^function! s:reap(name)$/;"	kind:f	line:1444
regress_bar	.vim/autoload/plug.vim	/^function! s:regress_bar()$/;"	kind:f	line:1009
reload_plugins	.vim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	kind:f	line:437
remove_rtp	.vim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	kind:f	line:545
remove_triggers	.vim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	kind:f	line:627
reorg_rtp	.vim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	kind:f	line:556
retry	.vim/autoload/plug.vim	/^function! s:retry()$/;"	kind:f	line:1112
revert	.vim/autoload/plug.vim	/^function! s:revert()$/;"	kind:f	line:2724
rm_rf	.vim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	kind:f	line:2358
rtp	.vim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	kind:f	line:469
s:TYPE	.vim/autoload/plug.vim	/^let s:TYPE = {$/;"	kind:v	line:110
s:base_spec	.vim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	kind:v	line:109
s:cpo_save	.vim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	kind:v	line:92
s:first_rtp	.vim/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	kind:v	line:2778
s:is_win	.vim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	kind:v	line:99
s:last_rtp	.vim/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	kind:v	line:2779
s:loaded	.vim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	kind:v	line:116
s:mac_gui	.vim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	kind:v	line:98
s:me	.vim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	kind:v	line:104
s:me	.vim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	kind:v	line:107
s:nvim	.vim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	kind:v	line:100
s:plug_buf	.vim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	kind:v	line:97
s:plug_src	.vim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	kind:v	line:95
s:plug_tab	.vim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	kind:v	line:96
s:triggers	.vim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	kind:v	line:117
s:vim8	.vim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	kind:v	line:101
s:vim_tags	.vim/config/plugins.vim	/^let s:vim_tags = expand($CTAGS)$/;"	kind:v	line:131
section	.vim/autoload/plug.vim	/^function! s:section(flags)$/;"	kind:f	line:2643
shellesc_cmd	.vim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	kind:f	line:2184
shellesc_ps1	.vim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	kind:f	line:2189
shellesc_sh	.vim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	kind:f	line:2193
snapshot	.vim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	kind:f	line:2742
source	.vim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	kind:f	line:295
spawn	.vim/autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	kind:f	line:1393
split_rtp	.vim/autoload/plug.vim	/^function! s:split_rtp()$/;"	kind:f	line:2774
status	.vim/autoload/plug.vim	/^function! s:status()$/;"	kind:f	line:2509
status_load	.vim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	kind:f	line:2559
status_update	.vim/autoload/plug.vim	/^function! s:status_update() range$/;"	kind:f	line:2570
switch_in	.vim/autoload/plug.vim	/^function! s:switch_in()$/;"	kind:f	line:874
switch_out	.vim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	kind:f	line:893
syntax	.vim/autoload/plug.vim	/^function! s:syntax()$/;"	kind:f	line:800
system	.vim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	kind:f	line:2259
system_chomp	.vim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	kind:f	line:2292
tick	.vim/autoload/plug.vim	/^function! s:tick()$/;"	kind:f	line:1511
to_a	.vim/autoload/plug.vim	/^function! s:to_a(v)$/;"	kind:f	line:283
to_s	.vim/autoload/plug.vim	/^function! s:to_s(v)$/;"	kind:f	line:287
trim	.vim/autoload/plug.vim	/^function! s:trim(str)$/;"	kind:f	line:443
update	.vim/autoload/plug.vim	/^function! s:update(force, names)$/;"	kind:f	line:783
update_finish	.vim/autoload/plug.vim	/^function! s:update_finish()$/;"	kind:f	line:1268
update_impl	.vim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	kind:f	line:1140
update_python	.vim/autoload/plug.vim	/^function! s:update_python()$/;"	kind:f	line:1569
update_ruby	.vim/autoload/plug.vim	/^function! s:update_ruby()$/;"	kind:f	line:1958
update_vim	.vim/autoload/plug.vim	/^function! s:update_vim()$/;"	kind:f	line:1504
upgrade	.vim/autoload/plug.vim	/^function! s:upgrade()$/;"	kind:f	line:2476
upgrade_specs	.vim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	kind:f	line:2503
version_requirement	.vim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	kind:f	line:447
warn	.vim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	kind:f	line:531
with_cd	.vim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	kind:f	line:2254
wrap_cmds	.vim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	kind:f	line:487
